c
@order.payments.last
@order.payments
@order
c
params[:sign]
signature = Digest::MD5.hexdigest "#{@payment_method.preferences[:api_key]}~#{@payment_method.preferences[:merchant_id]}~#{params[:reference_sale]}~#{new_value}~#{params[:currency]}~#{params[:state_pol]}"
new_value = params[:value].to_f.round(1).to_s
params
params[:TX_VALUE]
params[:sign]
signature
c
@order.payment_state.blank?
@order.completed?
@order
@order.payment_state
@order.completed?
signature == params["signature"]
params["signature"]
signature
c
@order.update(state: :complete)
@order.complete
c
@order.complete
@order.
@order.can_complete?
@order.can_co
c
n
c
n
exception
n
c
n
 @order.completed?
n
order_payment
n
c
@order = Spree::Order.find_by(id: params[:order_id])
c
params
c
params
c
order_params
c
order_params
c
n
order_params
order_params,
c
order_params[:payments_attributes][0]c
order_params[:payments_attributes][0]
order_params[:payments_attributes]
order_params
c
order_payment
c
order_params
c
massaged_params[:order]
massaged_params
params
c
params
payment_method
n
c
params[:order][:payments_attributes][0][:payment_method_id]
params[:order][:payments_attributes][0]
params[:order][:payments_attributes][:payment_method_id].to_s
params[:order][:payments_attributes][:payment_method_id]
params[:order][:payments_attributes]
params[:order][:payments_attributes]["payment_method_id"]
params[:order][:payments_attributes][:payment_method_id]
params[:order][:payments_attributes]
params
continue
params
c
params
c
n
Spree::PaymentMethod.find(2)
Spree::PaymentMethod(2)
update_params
@order.total.to_f
@order.item_total.to_i
@order.item_total
@order
